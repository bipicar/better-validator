/// <reference path="../typings/underscore/underscore.d.ts" />
"use strict";
const _ = require('underscore');
const base_1 = require('./base');
class IsObject extends base_1.Base {
    constructor(path, objectValidator, elementValidator, elementValidatorName) {
        super(path);
        this.objectValidator = objectValidator;
        this.elementValidator = elementValidator;
        this.elementValidatorName = elementValidatorName;
        this.properties = [];
        if (objectValidator) {
            objectValidator(this.childValidator.bind(this));
        }
    }
    childValidator(property) {
        if (!property)
            return this;
        const path = this.path.slice();
        path.push(property);
        this.properties.push(property);
        const child = new this.elementValidator(path);
        this.satisfies(this.elementValidatorName, (value) => {
            const propertyValue = value && value[property];
            return propertyValue === null || child.test(propertyValue);
        });
        return child;
    }
    strict() {
        this.satisfies('strict', (value) => {
            const properties = Object.keys(value);
            const unexpectedProperties = _.difference(properties, this.properties);
            return _.map(unexpectedProperties, (property) => {
                const path = this.path.slice();
                path.push(property);
                return {
                    path,
                    failed: 'strict',
                    value: value[property]
                };
            });
        });
        return this;
    }
}
exports.IsObject = IsObject;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzT2JqZWN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDhEQUE4RDs7QUFFOUQsTUFBWSxDQUFDLFdBQU0sWUFBWSxDQUFDLENBQUE7QUFDaEMsdUJBQW1CLFFBQVEsQ0FBQyxDQUFBO0FBSzVCLHVCQUE4QixXQUFJO0lBTWhDLFlBQVksSUFBc0IsRUFBRSxlQUErQixFQUN2RCxnQkFBZ0MsRUFBRSxvQkFBMkI7UUFDdkUsTUFBTSxJQUFJLENBQUMsQ0FBQztRQUVaLElBQUksQ0FBQyxlQUFlLEdBQUcsZUFBZSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxnQkFBZ0IsQ0FBQztRQUN6QyxJQUFJLENBQUMsb0JBQW9CLEdBQUcsb0JBQW9CLENBQUM7UUFDakQsSUFBSSxDQUFDLFVBQVUsR0FBRyxFQUFFLENBQUM7UUFFckIsRUFBRSxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztZQUNwQixlQUFlLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNsRCxDQUFDO0lBQ0gsQ0FBQztJQUVELGNBQWMsQ0FBQyxRQUFRO1FBQ3JCLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDO1lBQUMsTUFBTSxDQUFDLElBQUksQ0FBQztRQUUzQixNQUFNLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQy9CLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDcEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFL0IsTUFBTSxLQUFLLEdBQUcsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsb0JBQW9CLEVBQUUsQ0FBQyxLQUFLO1lBQzlDLE1BQU0sYUFBYSxHQUFHLEtBQUssSUFBSSxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDL0MsTUFBTSxDQUFDLGFBQWEsS0FBSyxJQUFJLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUM3RCxDQUFDLENBQUMsQ0FBQztRQUNILE1BQU0sQ0FBQyxLQUFLLENBQUM7SUFDZixDQUFDO0lBRUQsTUFBTTtRQUNKLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxFQUFFLENBQUMsS0FBSztZQUM3QixNQUFNLFVBQVUsR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3RDLE1BQU0sb0JBQW9CLEdBQUcsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxVQUFVLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ3ZFLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLG9CQUFvQixFQUFFLENBQUMsUUFBUTtnQkFDMUMsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztnQkFDL0IsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFFcEIsTUFBTSxDQUFDO29CQUNMLElBQUk7b0JBQ0osTUFBTSxFQUFFLFFBQVE7b0JBQ2hCLEtBQUssRUFBRSxLQUFLLENBQUMsUUFBUSxDQUFDO2lCQUN2QixDQUFDO1lBQ0osQ0FBQyxDQUFDLENBQUE7UUFDSixDQUFDLENBQUMsQ0FBQztRQUNILE1BQU0sQ0FBQyxJQUFJLENBQUM7SUFDZCxDQUFDO0FBQ0gsQ0FBQztBQXBEWSxnQkFBUSxXQW9EcEIsQ0FBQSIsImZpbGUiOiJpc09iamVjdC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vLyA8cmVmZXJlbmNlIHBhdGg9XCIuLi90eXBpbmdzL3VuZGVyc2NvcmUvdW5kZXJzY29yZS5kLnRzXCIgLz5cblxuaW1wb3J0ICogYXMgXyBmcm9tICd1bmRlcnNjb3JlJztcbmltcG9ydCB7QmFzZX0gZnJvbSAnLi9iYXNlJztcblxuZXhwb3J0IGRlY2xhcmUgdHlwZSBvYmplY3RWYWxpZGF0b3IgPSAoY2hpbGRWYWxpZGF0b3IpID0+IHZvaWQ7XG5leHBvcnQgZGVjbGFyZSB0eXBlIGJhc2VDb25zdHJ1Y3RvciA9IG5ldyAocGF0aDooc3RyaW5nfG51bWJlcilbXSkgPT4gQmFzZTtcblxuZXhwb3J0IGNsYXNzIElzT2JqZWN0IGV4dGVuZHMgQmFzZSB7XG4gIHByb3BlcnRpZXM6c3RyaW5nW107XG4gIG9iamVjdFZhbGlkYXRvcjpvYmplY3RWYWxpZGF0b3I7XG4gIGVsZW1lbnRWYWxpZGF0b3I6YmFzZUNvbnN0cnVjdG9yO1xuICBlbGVtZW50VmFsaWRhdG9yTmFtZTpzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IocGF0aDooc3RyaW5nfG51bWJlcilbXSwgb2JqZWN0VmFsaWRhdG9yOm9iamVjdFZhbGlkYXRvcixcbiAgICAgICAgICAgICAgZWxlbWVudFZhbGlkYXRvcjpiYXNlQ29uc3RydWN0b3IsIGVsZW1lbnRWYWxpZGF0b3JOYW1lOnN0cmluZykge1xuICAgIHN1cGVyKHBhdGgpO1xuXG4gICAgdGhpcy5vYmplY3RWYWxpZGF0b3IgPSBvYmplY3RWYWxpZGF0b3I7XG4gICAgdGhpcy5lbGVtZW50VmFsaWRhdG9yID0gZWxlbWVudFZhbGlkYXRvcjtcbiAgICB0aGlzLmVsZW1lbnRWYWxpZGF0b3JOYW1lID0gZWxlbWVudFZhbGlkYXRvck5hbWU7XG4gICAgdGhpcy5wcm9wZXJ0aWVzID0gW107XG5cbiAgICBpZiAob2JqZWN0VmFsaWRhdG9yKSB7XG4gICAgICBvYmplY3RWYWxpZGF0b3IodGhpcy5jaGlsZFZhbGlkYXRvci5iaW5kKHRoaXMpKTtcbiAgICB9XG4gIH1cblxuICBjaGlsZFZhbGlkYXRvcihwcm9wZXJ0eSk6QmFzZSB7XG4gICAgaWYgKCFwcm9wZXJ0eSkgcmV0dXJuIHRoaXM7XG5cbiAgICBjb25zdCBwYXRoID0gdGhpcy5wYXRoLnNsaWNlKCk7XG4gICAgcGF0aC5wdXNoKHByb3BlcnR5KTtcbiAgICB0aGlzLnByb3BlcnRpZXMucHVzaChwcm9wZXJ0eSk7XG5cbiAgICBjb25zdCBjaGlsZCA9IG5ldyB0aGlzLmVsZW1lbnRWYWxpZGF0b3IocGF0aCk7XG4gICAgdGhpcy5zYXRpc2ZpZXModGhpcy5lbGVtZW50VmFsaWRhdG9yTmFtZSwgKHZhbHVlKSA9PiB7XG4gICAgICBjb25zdCBwcm9wZXJ0eVZhbHVlID0gdmFsdWUgJiYgdmFsdWVbcHJvcGVydHldO1xuICAgICAgcmV0dXJuIHByb3BlcnR5VmFsdWUgPT09IG51bGwgfHwgY2hpbGQudGVzdChwcm9wZXJ0eVZhbHVlKTtcbiAgICB9KTtcbiAgICByZXR1cm4gY2hpbGQ7XG4gIH1cblxuICBzdHJpY3QoKTp0aGlzIHtcbiAgICB0aGlzLnNhdGlzZmllcygnc3RyaWN0JywgKHZhbHVlKSA9PiB7XG4gICAgICBjb25zdCBwcm9wZXJ0aWVzID0gT2JqZWN0LmtleXModmFsdWUpO1xuICAgICAgY29uc3QgdW5leHBlY3RlZFByb3BlcnRpZXMgPSBfLmRpZmZlcmVuY2UocHJvcGVydGllcywgdGhpcy5wcm9wZXJ0aWVzKTtcbiAgICAgIHJldHVybiBfLm1hcCh1bmV4cGVjdGVkUHJvcGVydGllcywgKHByb3BlcnR5KSA9PiB7XG4gICAgICAgIGNvbnN0IHBhdGggPSB0aGlzLnBhdGguc2xpY2UoKTtcbiAgICAgICAgcGF0aC5wdXNoKHByb3BlcnR5KTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHBhdGgsXG4gICAgICAgICAgZmFpbGVkOiAnc3RyaWN0JyxcbiAgICAgICAgICB2YWx1ZTogdmFsdWVbcHJvcGVydHldXG4gICAgICAgIH07XG4gICAgICB9KVxuICAgIH0pO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG59XG4iXX0=

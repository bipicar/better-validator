"use strict";
const base_1 = require('./base');
class IsNumber extends base_1.Base {
    constructor(path) {
        super(path);
    }
    integer() {
        this.satisfies('integer', (value) => !base_1.Base.hasValue(value) || /^-?\d+$/.test(String(value)));
        return this;
    }
    isInRange(lower, upper) {
        this.satisfies('isInRange', (value) => !base_1.Base.hasValue(value) || (lower === undefined || value >= lower) && (upper === undefined || value <= upper));
        return this;
    }
    notInRange(lower, upper) {
        this.satisfies('notInRange', (value) => !base_1.Base.hasValue(value) || (lower === undefined || value <= lower) && (upper === undefined || value >= upper));
        return this;
    }
    gt(threshold) {
        this.satisfies('gt', (value) => !base_1.Base.hasValue(value) || value > threshold);
        return this;
    }
    gte(threshold) {
        this.satisfies('gte', (value) => !base_1.Base.hasValue(value) || value >= threshold);
        return this;
    }
    lt(threshold) {
        this.satisfies('lt', (value) => !base_1.Base.hasValue(value) || value < threshold);
        return this;
    }
    lte(threshold) {
        this.satisfies('lte', (value) => !base_1.Base.hasValue(value) || value <= threshold);
        return this;
    }
    isPositive() {
        this.satisfies('isPositive', (value) => !base_1.Base.hasValue(value) || value > 0);
        return this;
    }
    notPositive() {
        this.satisfies('notPositive', (value) => !base_1.Base.hasValue(value) || value <= 0);
        return this;
    }
    isNegative() {
        this.satisfies('isNegative', (value) => !base_1.Base.hasValue(value) || value < 0);
        return this;
    }
    notNegative() {
        this.satisfies('notNegative', (value) => !base_1.Base.hasValue(value) || value >= 0);
        return this;
    }
    isZero() {
        this.satisfies('isZero', (value) => !base_1.Base.hasValue(value) || value === 0);
        return this;
    }
    notZero() {
        this.satisfies('notZero', (value) => !base_1.Base.hasValue(value) || value !== 0);
        return this;
    }
}
exports.IsNumber = IsNumber;

//# sourceMappingURL=data:application/json;charset=utf8;base64,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QUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUM7UUFDOUUsTUFBTSxDQUFDLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxLQUFLLEtBQUssQ0FBQyxXQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxJQUFJLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQztRQUM1RSxNQUFNLENBQUMsSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsRUFBRSxDQUFDLEtBQUssS0FBSyxDQUFDLFdBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDO1FBQzlFLE1BQU0sQ0FBQyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRUQsTUFBTTtRQUNKLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxFQUFFLENBQUMsS0FBSyxLQUFLLENBQUMsV0FBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDMUUsTUFBTSxDQUFDLElBQUksQ0FBQztJQUNkLENBQUM7SUFFRCxPQUFPO1FBQ0wsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxLQUFLLEtBQUssQ0FBQyxXQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxJQUFJLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQztRQUMzRSxNQUFNLENBQUMsSUFBSSxDQUFDO0lBQ2QsQ0FBQztBQUNILENBQUM7QUFyRVksZ0JBQVEsV0FxRXBCLENBQUEiLCJmaWxlIjoiaXNOdW1iZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Jhc2V9IGZyb20gJy4vYmFzZSc7XG5cbmV4cG9ydCBjbGFzcyBJc051bWJlciBleHRlbmRzIEJhc2Uge1xuICBjb25zdHJ1Y3RvcihwYXRoOihzdHJpbmd8bnVtYmVyKVtdKSB7XG4gICAgc3VwZXIocGF0aCk7XG4gIH1cblxuICBpbnRlZ2VyKCk6dGhpcyB7XG4gICAgdGhpcy5zYXRpc2ZpZXMoJ2ludGVnZXInLCAodmFsdWUpID0+ICFCYXNlLmhhc1ZhbHVlKHZhbHVlKSB8fCAvXi0/XFxkKyQvLnRlc3QoU3RyaW5nKHZhbHVlKSkpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgaXNJblJhbmdlKGxvd2VyOm51bWJlciwgdXBwZXI6bnVtYmVyKTp0aGlzIHtcbiAgICB0aGlzLnNhdGlzZmllcygnaXNJblJhbmdlJywgKHZhbHVlKSA9PiAhQmFzZS5oYXNWYWx1ZSh2YWx1ZSkgfHwgKGxvd2VyID09PSB1bmRlZmluZWQgfHwgdmFsdWUgPj0gbG93ZXIpICYmICh1cHBlciA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlIDw9IHVwcGVyKSk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBub3RJblJhbmdlKGxvd2VyOm51bWJlciwgdXBwZXI6bnVtYmVyKTp0aGlzIHtcbiAgICB0aGlzLnNhdGlzZmllcygnbm90SW5SYW5nZScsICh2YWx1ZSkgPT4gIUJhc2UuaGFzVmFsdWUodmFsdWUpIHx8IChsb3dlciA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlIDw9IGxvd2VyKSAmJiAodXBwZXIgPT09IHVuZGVmaW5lZCB8fCB2YWx1ZSA+PSB1cHBlcikpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgZ3QodGhyZXNob2xkOm51bWJlcik6dGhpcyB7XG4gICAgdGhpcy5zYXRpc2ZpZXMoJ2d0JywgKHZhbHVlKSA9PiAhQmFzZS5oYXNWYWx1ZSh2YWx1ZSkgfHwgdmFsdWUgPiB0aHJlc2hvbGQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgZ3RlKHRocmVzaG9sZDpudW1iZXIpOnRoaXMge1xuICAgIHRoaXMuc2F0aXNmaWVzKCdndGUnLCAodmFsdWUpID0+ICFCYXNlLmhhc1ZhbHVlKHZhbHVlKSB8fCB2YWx1ZSA+PSB0aHJlc2hvbGQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgbHQodGhyZXNob2xkOm51bWJlcik6dGhpcyB7XG4gICAgdGhpcy5zYXRpc2ZpZXMoJ2x0JywgKHZhbHVlKSA9PiAhQmFzZS5oYXNWYWx1ZSh2YWx1ZSkgfHwgdmFsdWUgPCB0aHJlc2hvbGQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgbHRlKHRocmVzaG9sZDpudW1iZXIpOnRoaXMge1xuICAgIHRoaXMuc2F0aXNmaWVzKCdsdGUnLCAodmFsdWUpID0+ICFCYXNlLmhhc1ZhbHVlKHZhbHVlKSB8fCB2YWx1ZSA8PSB0aHJlc2hvbGQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgaXNQb3NpdGl2ZSgpOnRoaXMge1xuICAgIHRoaXMuc2F0aXNmaWVzKCdpc1Bvc2l0aXZlJywgKHZhbHVlKSA9PiAhQmFzZS5oYXNWYWx1ZSh2YWx1ZSkgfHwgdmFsdWUgPiAwKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIG5vdFBvc2l0aXZlKCk6dGhpcyB7XG4gICAgdGhpcy5zYXRpc2ZpZXMoJ25vdFBvc2l0aXZlJywgKHZhbHVlKSA9PiAhQmFzZS5oYXNWYWx1ZSh2YWx1ZSkgfHwgdmFsdWUgPD0gMCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBpc05lZ2F0aXZlKCk6dGhpcyB7XG4gICAgdGhpcy5zYXRpc2ZpZXMoJ2lzTmVnYXRpdmUnLCAodmFsdWUpID0+ICFCYXNlLmhhc1ZhbHVlKHZhbHVlKSB8fCB2YWx1ZSA8IDApO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgbm90TmVnYXRpdmUoKTp0aGlzIHtcbiAgICB0aGlzLnNhdGlzZmllcygnbm90TmVnYXRpdmUnLCAodmFsdWUpID0+ICFCYXNlLmhhc1ZhbHVlKHZhbHVlKSB8fCB2YWx1ZSA+PSAwKTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGlzWmVybygpOnRoaXMge1xuICAgIHRoaXMuc2F0aXNmaWVzKCdpc1plcm8nLCAodmFsdWUpID0+ICFCYXNlLmhhc1ZhbHVlKHZhbHVlKSB8fCB2YWx1ZSA9PT0gMCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBub3RaZXJvKCk6dGhpcyB7XG4gICAgdGhpcy5zYXRpc2ZpZXMoJ25vdFplcm8nLCAodmFsdWUpID0+ICFCYXNlLmhhc1ZhbHVlKHZhbHVlKSB8fCB2YWx1ZSAhPT0gMCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cbn1cbiJdfQ==
